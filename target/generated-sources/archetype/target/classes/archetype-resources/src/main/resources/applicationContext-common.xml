#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="${version}" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 测试环境配置 <value>classpath*:/application.test.properties</value> -->
				<!-- stage开发环境配置 <value>classpath*:/application.stage.properties</value> -->
				<!-- 生产环境配置 <value>classpath*:/application.product.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="${package}"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>

	<!-- 数据源配置,使用应用内的c3p0数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${symbol_dollar}{jdbc.driver}" />
		<property name="jdbcUrl" value="${symbol_dollar}{jdbc.url}" />
		<property name="user" value="${symbol_dollar}{jdbc.username}" />
		<property name="password" value="${symbol_dollar}{jdbc.password}" />

		<!-- Connection Pooling Info -->
		<property name="initialPoolSize" value="${symbol_dollar}{c3p0.initialSize}" />
		<property name="minPoolSize" value="${symbol_dollar}{c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${symbol_dollar}{c3p0.maxPoolSize}" />
		<!-- Mysql服务器默认的“wait_timeout”是8小时，也就是说一个connection空闲超过8个小时， Mysql将自动断开该connection。这就是问题的所在，在c3p0 
			pools中的connections如果空闲超过8小时， Mysql将其断开，而c3p0并不知道该connection已经失效，如果这时有Client请求connection， 
			c3p0将该失效的Connection提供给Client，将会造成异常，为解决此问题增加以下配置。 -->
		<property name="maxIdleTime" value="${symbol_dollar}{c3p0.maxIdleTime}" />
		<property name="testConnectionOnCheckin" value="${symbol_dollar}{c3p0.testConnectionOnCheckin}" />
		<property name="automaticTestTable" value="${symbol_dollar}{c3p0.automaticTestTable}" />
		<property name="idleConnectionTestPeriod" value="${symbol_dollar}{c3p0.idleConnectionTestPeriod}" />
<!--		<property name="autoCommitOnClose" value="false"></property>-->
		<!-- <property name="testConnectionOnCheckout" value="${symbol_dollar}{c3p0.testConnectionOnCheckout}" 
			/> -->
	</bean>

	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
		/> -->


	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!--		<property name="namingStrategy">-->
<!--			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />-->
<!--		</property>-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${symbol_dollar}{hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${symbol_dollar}{hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${symbol_dollar}{hibernate.format_sql}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>${package}.**.entity.</value>
			</list>
		</property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
<!--		<property name="nestedTransactionAllowed" value="true"></property>-->
	</bean>

	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:sqlmap/**/*.xml"></property>
		<!-- <property name="configLocation" value="classpath*:mybatisConfig.xml" 
			/> -->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
	<!-- 使用annotation定义Asepct -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- Email 配置 -->
	<bean id="emailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- SMTP Server Configuration -->
		<property name="host" value="58.2.221.2" />
		<property name="username" value="800021189" />
		<property name="password" value="G@28032008t" />
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="Workflow-Center.China@genpact.com" />
	</bean>
	<bean id="emailTemplateConfig4fm"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPaths">
			<list>
				<value>classpath:/mailTemplates/</value>
				<!-- <value>classpath:/mailTemplates/${packageInPathFormat}/example</value> -->
			</list>
		</property>
		<property name="preferFileSystemAccess" value="false"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<bean id="emailTemplateConfig4vl"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="classpath:/mailTemplates/" />
		<property name="preferFileSystemAccess" value="false"></property>
		<property name="velocityProperties">
			<props>
				<prop key="default.contentType">text/html; charset=UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="input.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>
</beans>